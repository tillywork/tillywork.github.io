"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17],{936:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var s=t(4848),r=t(8453);const o={sidebar_position:2,description:"Using TanStack Query and service composables"},i="Data Fetching",a={id:"contribution/frontend/data",title:"Data Fetching",description:"Using TanStack Query and service composables",source:"@site/docs/contribution/frontend/data.md",sourceDirName:"contribution/frontend",slug:"/contribution/frontend/data",permalink:"/contribution/frontend/data",draft:!1,unlisted:!1,editUrl:"https://github.com/tillywork/tillywork/tree/main/packages/docs/docs/contribution/frontend/data.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Using TanStack Query and service composables"},sidebar:"tutorialSidebar",previous:{title:"Vuetify",permalink:"/contribution/frontend/vuetify"},next:{title:"Routing",permalink:"/contribution/frontend/routing"}},c={},u=[{value:"Querying Example",id:"querying-example",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"data-fetching",children:"Data Fetching"}),"\n",(0,s.jsxs)(n.p,{children:["We use ",(0,s.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/vue/overview",children:"TanStack Query"})," to manage data fetched from the API. It offers a lot of cool functionality, for not many extra lines of code, such as interval refetching, retrying failed requests, and more."]}),"\n",(0,s.jsx)(n.p,{children:"Our implementation is straight-forward: We create a service composable for each controller in the API, create a standard axios request function, then wrap that function in a TanStack Query query or mutation which we use in our components."}),"\n",(0,s.jsx)(n.admonition,{title:"useHttp Composable",type:"tip",children:(0,s.jsx)(n.p,{children:"The useHttp composable is the standard axios wrapper for our app, make sure to use it when dealing with our API to handle the user token injection and setting the base URL."})}),"\n",(0,s.jsx)(n.h2,{id:"querying-example",children:"Querying Example"}),"\n",(0,s.jsxs)(n.p,{children:["Let's say we wanted to fetch a list of users, we will first need to create our service under the ",(0,s.jsx)(n.code,{children:"composables/services"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export const useUsersService = () => {\n  // Initialize the useHttp composable\n  const { sendRequest } = useHttp();\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then, we create the fetch function:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function getUsers() {\n  return sendRequest('/users', {\n    method: 'GET', // Optional for GET requests\n  });\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, we create the TanStack Query function:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function useUsersQuery() {\n  return useQuery({\n    queryKey: ['users'],\n    queryFn: getUsers,\n    staleTime: 5 * 60 * 1000, // We want the data to stay cached for 5 minutes\n  });\n}\n\n// Return the query so you are able to use it in your components\nreturn {\n  useUsersQuery,\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"And finally, we can use it like this in our components:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'<script setup lang="ts">\nconst { useUsersQuery } = useUsersService();\nconst { data: users, isFetching } = useUsersQuery();\n<\/script>\n\n<template>\n  <template v-if="!isFetching">\n    <template v-for="user in users" :key="user.id">\n      {{ user.firstName }}\n    </template>\n  </template>\n  <template v-else>Loading..</template>\n</template>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Any query you have in your component will fetch as soon as the component loads. To change this behavior, use the ",(0,s.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/vue/guides/dependent-queries",children:"enabled option"})," in the useQuery function from TanStack."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);